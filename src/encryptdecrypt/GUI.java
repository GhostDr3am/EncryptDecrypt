/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package encryptdecrypt;


import static encryptdecrypt.HexCoder.decode;
import static encryptdecrypt.HexCoder.encodeHexString;
import java.awt.event.KeyEvent;
import javax.swing.BorderFactory;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.border.LineBorder;
import org.apache.commons.codec.binary.Base64;

/**
 *
 * @author Nugraha
 */
public class GUI extends javax.swing.JFrame {
   
    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        setLocationRelativeTo(this);
        cboX.addItem(" BASE64");
        cboX.addItem(" Caesar");
        cboX.addItem(" ROT47");
        cboX.addItem(" Vigenere");
        cboX.addItem(" HEX");
        cboX.addItem(" XOR");
        cboX.addItem(" Atbash");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        TA2 = new javax.swing.JScrollPane();
        encrypt = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        TA1 = new javax.swing.JScrollPane();
        decrypt = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        hex = new javax.swing.JPanel();
        TF1 = new javax.swing.JLabel();
        keyfield = new javax.swing.JTextField();
        caesar = new javax.swing.JPanel();
        TF3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        Vigenerebtn = new javax.swing.JPanel();
        TF4 = new javax.swing.JLabel();
        XORbtn = new javax.swing.JPanel();
        TF5 = new javax.swing.JLabel();
        AtbashBtn = new javax.swing.JPanel();
        TF6 = new javax.swing.JLabel();
        cboX = new javax.swing.JComboBox<String>();
        ROT47btn1 = new javax.swing.JPanel();
        TF7 = new javax.swing.JLabel();
        Base64Btn = new javax.swing.JPanel();
        TF2 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(61, 220, 236));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(61, 220, 236));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(122, 71, 221), 2, true), " PlainText ", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Kristen ITC", 1, 24), new java.awt.Color(122, 71, 221))); // NOI18N
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TA2.setBorder(null);

        encrypt.setColumns(20);
        encrypt.setFont(new java.awt.Font("Monospaced", 0, 15)); // NOI18N
        encrypt.setRows(5);
        encrypt.setBorder(null);
        TA2.setViewportView(encrypt);

        jPanel2.add(TA2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 260, 260));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, 280, 320));

        jPanel3.setBackground(new java.awt.Color(61, 220, 236));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(122, 71, 221), 2, true), " Encrypt ", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Kristen ITC", 1, 24), new java.awt.Color(122, 71, 221))); // NOI18N
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TA1.setBorder(null);

        decrypt.setColumns(20);
        decrypt.setFont(new java.awt.Font("Monospaced", 0, 15)); // NOI18N
        decrypt.setRows(5);
        decrypt.setBorder(null);
        TA1.setViewportView(decrypt);

        jPanel3.add(TA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 260, 260));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 150, 280, 320));
        jPanel3.getAccessibleContext().setAccessibleName(" Encrypt");

        jLabel1.setFont(new java.awt.Font("Kristen ITC", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(122, 71, 221));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("aplikasi enkripsi dan dekripsi");
        jLabel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jLabel1MouseDragged(evt);
            }
        });
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel1MousePressed(evt);
            }
        });
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 970, 80));

        hex.setBackground(new java.awt.Color(255, 255, 255));
        hex.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(122, 71, 221)));
        hex.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hexMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                hexMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                hexMouseExited(evt);
            }
        });
        hex.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TF1.setFont(new java.awt.Font("Kristen ITC", 1, 18)); // NOI18N
        TF1.setForeground(new java.awt.Color(204, 204, 204));
        TF1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TF1.setText("Enkrip / Dekrip");
        hex.add(TF1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 190, 40));

        jPanel1.add(hex, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 410, 210, 60));

        keyfield.setFont(new java.awt.Font("Kristen ITC", 1, 28)); // NOI18N
        keyfield.setForeground(new java.awt.Color(122, 71, 221));
        keyfield.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        keyfield.setText("1");
        keyfield.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(122, 71, 221)), " Key Field", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Kristen ITC", 1, 18), new java.awt.Color(122, 71, 221))); // NOI18N
        keyfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keyfieldActionPerformed(evt);
            }
        });
        keyfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                keyfieldKeyTyped(evt);
            }
        });
        jPanel1.add(keyfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 300, 210, 70));

        caesar.setBackground(new java.awt.Color(255, 255, 255));
        caesar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(122, 71, 221)));
        caesar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                caesarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                caesarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                caesarMouseExited(evt);
            }
        });
        caesar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TF3.setFont(new java.awt.Font("Kristen ITC", 1, 18)); // NOI18N
        TF3.setForeground(new java.awt.Color(204, 204, 204));
        TF3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TF3.setText("Enkrip / Dekrip");
        caesar.add(TF3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 190, 40));

        jPanel1.add(caesar, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 230, 210, 60));

        jSeparator1.setBackground(new java.awt.Color(122, 71, 221));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 80, 120, 10));

        jSeparator2.setBackground(new java.awt.Color(122, 71, 221));
        jPanel1.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 73, 150, 10));

        Vigenerebtn.setBackground(new java.awt.Color(255, 255, 255));
        Vigenerebtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(122, 71, 221)));
        Vigenerebtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                VigenerebtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                VigenerebtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                VigenerebtnMouseExited(evt);
            }
        });
        Vigenerebtn.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TF4.setFont(new java.awt.Font("Kristen ITC", 1, 18)); // NOI18N
        TF4.setForeground(new java.awt.Color(204, 204, 204));
        TF4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TF4.setText("Encrypt / Decrypt");
        Vigenerebtn.add(TF4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 190, 40));

        jPanel1.add(Vigenerebtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 230, 210, 60));

        XORbtn.setBackground(new java.awt.Color(255, 255, 255));
        XORbtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(122, 71, 221)));
        XORbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                XORbtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                XORbtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                XORbtnMouseExited(evt);
            }
        });
        XORbtn.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TF5.setFont(new java.awt.Font("Kristen ITC", 1, 18)); // NOI18N
        TF5.setForeground(new java.awt.Color(204, 204, 204));
        TF5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TF5.setText("Encrypt / Decrypt");
        XORbtn.add(TF5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 190, 40));

        jPanel1.add(XORbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 230, 210, 60));

        AtbashBtn.setBackground(new java.awt.Color(255, 255, 255));
        AtbashBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(122, 71, 221)));
        AtbashBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AtbashBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                AtbashBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                AtbashBtnMouseExited(evt);
            }
        });
        AtbashBtn.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TF6.setFont(new java.awt.Font("Kristen ITC", 1, 18)); // NOI18N
        TF6.setForeground(new java.awt.Color(204, 204, 204));
        TF6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TF6.setText("Encrypt / Decrypt");
        AtbashBtn.add(TF6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 190, 40));

        jPanel1.add(AtbashBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 230, 210, 60));

        cboX.setBackground(new java.awt.Color(254, 254, 254));
        cboX.setFont(new java.awt.Font("Kristen ITC", 1, 15)); // NOI18N
        cboX.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboXItemStateChanged(evt);
            }
        });
        jPanel1.add(cboX, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 160, 210, 50));

        ROT47btn1.setBackground(new java.awt.Color(255, 255, 255));
        ROT47btn1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(122, 71, 221)));
        ROT47btn1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ROT47btn1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ROT47btn1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ROT47btn1MouseExited(evt);
            }
        });
        ROT47btn1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TF7.setFont(new java.awt.Font("Kristen ITC", 1, 18)); // NOI18N
        TF7.setForeground(new java.awt.Color(204, 204, 204));
        TF7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TF7.setText("Encrypt / Decrypt");
        ROT47btn1.add(TF7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 190, 40));

        jPanel1.add(ROT47btn1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 230, 210, 60));

        Base64Btn.setBackground(new java.awt.Color(255, 255, 255));
        Base64Btn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(122, 71, 221)));
        Base64Btn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Base64BtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Base64BtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Base64BtnMouseExited(evt);
            }
        });
        Base64Btn.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TF2.setFont(new java.awt.Font("Kristen ITC", 1, 18)); // NOI18N
        TF2.setForeground(new java.awt.Color(204, 204, 204));
        TF2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TF2.setText("Encrypt / Decrypt");
        Base64Btn.add(TF2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 190, 40));

        jPanel1.add(Base64Btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 230, 210, 60));

        jLabel2.setFont(new java.awt.Font("Kristen ITC", 0, 24)); // NOI18N
        jLabel2.setText("Asma Ayu Aulia 20TF003");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 650, -1, -1));

        jLabel3.setFont(new java.awt.Font("Kristen ITC", 0, 36)); // NOI18N
        jLabel3.setText("Anggota kelompok :");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 480, -1, -1));

        jLabel4.setFont(new java.awt.Font("Kristen ITC", 0, 24)); // NOI18N
        jLabel4.setText("Dedi Supriadi 20TF036");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 530, -1, -1));

        jLabel5.setFont(new java.awt.Font("Kristen ITC", 0, 24)); // NOI18N
        jLabel5.setText("Ayuni 20TF005");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 570, -1, -1));

        jLabel6.setFont(new java.awt.Font("Kristen ITC", 0, 24)); // NOI18N
        jLabel6.setText("Laela huzlah 20TF016");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 610, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 970, 760));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    private void hexMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hexMouseClicked
        // TODO add your handling code here:

        String z1 = encrypt.getText();
        String z2 = decrypt.getText();
        
        if(!z1.equals("") && z2.equals("")){
        
        String hexStr = encodeHexString(z1.getBytes());
	decrypt.setText(hexStr);
        
        
        } else if(!z2.equals("")&& z1.equals("")){
       
        byte [] datas = decode(z2.getBytes());
        encrypt.setText(new String(datas));
            
        } else if(!z2.equals("")&& !z1.equals("")){
            String hexStr = encodeHexString(z1.getBytes());
            decrypt.setText(hexStr);
        }

    }//GEN-LAST:event_hexMouseClicked

    private void hexMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hexMouseEntered
        // TODO add your handling code here:
        x1();
    }//GEN-LAST:event_hexMouseEntered

    public void x1() {
        setColor(hex);
        setColorTF(TF1);
        setBorder2(hex);
    }
    
    private void hexMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hexMouseExited
        // TODO add your handling code here:
        y1();
    }//GEN-LAST:event_hexMouseExited

    private void Base64BtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Base64BtnMouseClicked
        // TODO add your handling code here:
        String z1 = encrypt.getText();
        String z2 = decrypt.getText();
        
        
        if(!z1.equals("") && z2.equals("")){
         String base64Str = Base64.encodeBase64String(z1.getBytes()); 
         decrypt.setText(base64Str);
       
        } else if(!z2.equals("")&& z1.equals("")){
         byte[] decodeStr = Base64.decodeBase64(z2);   
           encrypt.setText(new String(decodeStr));
        
        } else if(!z2.equals("")&& !z1.equals("")){
            String base64Str = Base64.encodeBase64String(z1.getBytes()); 
            decrypt.setText(base64Str);
        }
    }//GEN-LAST:event_Base64BtnMouseClicked

    private void Base64BtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Base64BtnMouseEntered
        // TODO add your handling code here:
        setColor(Base64Btn);
        setColorTF(TF2);
        setBorder2(Base64Btn);
    }//GEN-LAST:event_Base64BtnMouseEntered

    private void Base64BtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Base64BtnMouseExited
        // TODO add your handling code here:
        resetColor(Base64Btn);
        resetColorTF(TF2);
    }//GEN-LAST:event_Base64BtnMouseExited

    private String table = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890.,;_:+-*/@$#?!=()[]{}\\\'\"";   
    
    private String Clean_text(String text)
     {
        text = text.replaceAll("\n", "");  
         
        for(int x = 0; x < text.length(); x++)
        {
            int position = table.indexOf(text.charAt(x));
            
            if (position == -1)
            {
                text = text.replace(text.charAt(x), ' ');
            }
        }        
        return text;
    }  
    
    public String Encryptx(String text, int key)
        {       
        String cleaned_text = Clean_text(text);
        
        String encrypted = "";  
        
     for(int i = 0; i < cleaned_text.length();i++)
        {
           int position = table.indexOf(cleaned_text.charAt(i));
           
           if ((position + key) < table.length())
            {
                encrypted += table.charAt(position + key);
            }
            else
            {
                encrypted +=  table.charAt((position + key) - table.length());
            }         
        }        
        return encrypted;
    }
    
    public String Decryptx(String text, int key)
    {        
        String cleaned_text = Clean_text(text);
        
        String decrypted = "";   
        
        for(int x = 0; x < cleaned_text.length(); x++)
        {            
            int position = table.indexOf(cleaned_text.charAt(x)); 
            
            if ((position - key) < 0)
            {
                decrypted += table.charAt((position - key) + table.length());
            }
            else
            {
                decrypted += table.charAt(position - key );
            }         
        }        
        return decrypted;
    }
    
    private void caesarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_caesarMouseClicked
        // TODO add your handling code here:
        String z1 = encrypt.getText();
        String z2 = decrypt.getText();
        String z3 = keyfield.getText();
        int key = Integer.parseInt(z3);
        
        if(!z1.equals("") && z2.equals("") && !z3.equals("")){
       
         decrypt.setText(Encryptx(z1, key) );
       
        } else if(!z2.equals("")&& z1.equals("") && !z3.equals("")){
         
           encrypt.setText(Decryptx(z2, key));
        } else if(!z2.equals("")&& !z1.equals("") && z3.equals("")){
            JOptionPane.showMessageDialog(null,"Please input keyfield");
            
        } else if(!z2.equals("")&& !z1.equals("") && !z3.equals("")){
            decrypt.setText(Encryptx(z1, key) );
        }
        
    }//GEN-LAST:event_caesarMouseClicked

    private void caesarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_caesarMouseEntered
        // TODO add your handling code here:
        setColor(caesar);
        setColorTF(TF3);
        setBorder2(caesar);
    }//GEN-LAST:event_caesarMouseEntered

    private void caesarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_caesarMouseExited
        // TODO add your handling code here:
        resetColor(caesar);
        resetColorTF(TF3);
    }//GEN-LAST:event_caesarMouseExited

    private void keyfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keyfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_keyfieldActionPerformed

    private String Cleaning_text(String text)
     {
         text = text.replaceAll("\n", "");  
         
        for(int x = 0; x < text.length(); x++)
        {
            int position = table.indexOf(text.charAt(x));
            
            if (position == -1)
            {
                text= text.replace(text.charAt(x), ' ');
            }
        }        
        return text;
    } 
       
public  String EncryptZ(String text,String key)
{
  String cleaned_text = Cleaning_text(text);
        
  String encrypted = "";
 
  for(int t = 0,k= 0; t < cleaned_text.length(); t++,k= (k+1) % key.length())
  {
    int position = (table.indexOf(cleaned_text.charAt(t)) + table.indexOf(key.charAt(k))) % table.length();

   encrypted += table.charAt(position );

  }
   return encrypted;
}

public String DecryptZ(String text,String key  )
{
  String cleaned_text = Cleaning_text(text);  
    
  String decrypted = "";

  for(int t = 0, k = 0; t < cleaned_text.length(); t++,k= (k+1) % key .length())
  {
   int position = (table.indexOf(cleaned_text.charAt(t)) - table.indexOf(key.charAt(k)));

   position = (position < 0)?(position + table.length()): position;

   decrypted += table.charAt(position);
   }
  return decrypted;
}
    
    private void VigenerebtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_VigenerebtnMouseClicked
        // TODO add your handling code here:
        String z1 = encrypt.getText();
        String z2 = decrypt.getText();
        String key = keyfield.getText();
        if(!z1.equals("") && z2.equals("") && !key.equals("")){
         decrypt.setText(EncryptZ(z1, key) );
       
        } else if(!z2.equals("")&& z1.equals("") && !key.equals("")){
           encrypt.setText(DecryptZ(z2, key));
           
        } else if(!z2.equals("")&& !z1.equals("") && key.equals("")){
            JOptionPane.showMessageDialog(null,"Please input keyfield");
            
        } else if(!z2.equals("")&& !z1.equals("") && !key.equals("")){
            decrypt.setText(EncryptZ(z1, key) );
        }
    }//GEN-LAST:event_VigenerebtnMouseClicked

    private void VigenerebtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_VigenerebtnMouseEntered
        // TODO add your handling code here:
        setColor(Vigenerebtn);
        setColorTF(TF4);
        setBorder2(Vigenerebtn);
    }//GEN-LAST:event_VigenerebtnMouseEntered

    private void VigenerebtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_VigenerebtnMouseExited
        // TODO add your handling code here:
        resetColor(Vigenerebtn);
        resetColorTF(TF4);
    }//GEN-LAST:event_VigenerebtnMouseExited

    private void XORbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_XORbtnMouseClicked
        // TODO add your handling code here:
        String z1 = encrypt.getText();
        String z2 = decrypt.getText();
        String z3 = keyfield.getText();
        int key = Integer.parseInt(z3);
        
        if(!z1.equals("") && z2.equals("") && !z3.equals("")){
       
            String encrypHexa = "";
        int keyItr = 0;
        for (int i = 0; i < z1.length(); i++) {
            // XOR Operation
            int temp = z1.charAt(i) ^ z3.charAt(keyItr);

            encrypHexa += String.format("%02x", (byte)temp);
            keyItr++;
            if(keyItr >= z3.length()){
                // once all of key's letters are used, repeat the key
                keyItr = 0;
            }

        }
        
            
            
         decrypt.setText(encrypHexa);
       
        } else if(!z2.equals("")&& z1.equals("") && !z3.equals("")){
         
            String hexToDeci = "";
        for (int i = 0; i < z2.length()-1; i+=2) {
            // splitting hex into a pair of two
            String output = z2.substring(i, (i+2));
            int decimal = Integer.parseInt(output, 16);
            hexToDeci += (char)decimal;
        }
            
           String decrypText = "";
        int keyItr = 0;
        for (int i = 0; i < hexToDeci.length(); i++) {
            // XOR Operation
            int temp = hexToDeci.charAt(i) ^ z3.charAt(keyItr);

            decrypText += (char)temp;
            keyItr++;
            if(keyItr >= z3.length()){
                // once all of key's letters are used, repeat the key
                keyItr = 0;
            }

        }
            encrypt.setText(decrypText);
            
        } else if(!z2.equals("")&& !z1.equals("") && z3.equals("")){
            JOptionPane.showMessageDialog(null,"Please input keyfield");
            
        
        
        
        } else if(!z2.equals("")&& !z1.equals("") && !z3.equals("")){
            String encrypHexa = "";
        int keyItr = 0;
        for (int i = 0; i < z1.length(); i++) {
            // XOR Operation
            int temp = z1.charAt(i) ^ z3.charAt(keyItr);

            encrypHexa += String.format("%02x", (byte)temp);
            keyItr++;
            if(keyItr >= z3.length()){
                // once all of key's letters are used, repeat the key
                keyItr = 0;
            }

        }
        decrypt.setText(encrypHexa);
        }
    }//GEN-LAST:event_XORbtnMouseClicked

    private void XORbtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_XORbtnMouseEntered
        // TODO add your handling code here:
        setColor(XORbtn);
        setColorTF(TF5);
        setBorder2(XORbtn);
    }//GEN-LAST:event_XORbtnMouseEntered

    private void XORbtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_XORbtnMouseExited
        // TODO add your handling code here:
        resetColor(XORbtn);
        resetColorTF(TF5);
    }//GEN-LAST:event_XORbtnMouseExited

    private void keyfieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_keyfieldKeyTyped
        // TODO add your handling code here:
        char karakter = evt.getKeyChar();
        if(!(((karakter >= '0') && (karakter <= '9') || (karakter == KeyEvent.VK_BACK_SPACE) || (karakter == KeyEvent.VK_DELETE)))){
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_keyfieldKeyTyped

    private void AtbashBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AtbashBtnMouseClicked
        // TODO add your handling code here:
        String z1 = encrypt.getText();
        String z2 = decrypt.getText();
        
        if(!z1.equals("") && z2.equals("")){
        
        String alpa = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
        String reverseAlpa = "";
        // reversing alphabets
        for (int i = alpa.length()-1; i > -1; i--) {
            reverseAlpa += alpa.charAt(i);
        }
         z1 = z1.toUpperCase();

        String encryText = "";
        for (int i = 0; i < z1.length(); i++) {
            if(z1.charAt(i) == (char)32){
                encryText += " ";
            } else {
                int count = 0;
                for (int j = 0; j < alpa.length(); j++) {
                    if (z1.charAt(i) == alpa.charAt(j)){
                        encryText += reverseAlpa.charAt(j);
                        break;
                    }
                } // inner for
            } // if-else
        } // for
        
            
	decrypt.setText(encryText);
        
        
        } else if(!z2.equals("")&& z1.equals("")){
       
        String alpa = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
        String reverseAlpa = "";
        // reversing alphabets
        for (int i = alpa.length()-1; i > -1; i--) {
            reverseAlpa += alpa.charAt(i);
        }
        z2 = z2.toUpperCase();

        String dencryText = "";
        for (int i = 0; i < z2.length(); i++) {
            if(z2.charAt(i) == (char)32){
                dencryText += " ";
            } else {
                int count = 0;
                for (int j = 0; j < reverseAlpa.length(); j++) {
                    if (z2.charAt(i) == reverseAlpa.charAt(j)){
                        dencryText += alpa.charAt(j);
                        break;
                    }
                } // inner for
            } // if-else
        } // for
        
        
        encrypt.setText(dencryText);
            
        } else if(!z2.equals("")&& !z1.equals("")){
            String alpa = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
        String reverseAlpa = "";
        // reversing alphabets
        for (int i = alpa.length()-1; i > -1; i--) {
            reverseAlpa += alpa.charAt(i);
        }
         z1 = z1.toUpperCase();

        String encryText = "";
        for (int i = 0; i < z1.length(); i++) {
            if(z1.charAt(i) == (char)32){
                encryText += " ";
            } else {
                int count = 0;
                for (int j = 0; j < alpa.length(); j++) {
                    if (z1.charAt(i) == alpa.charAt(j)){
                        encryText += reverseAlpa.charAt(j);
                        break;
                    }
                } // inner for
            } // if-else
        } // for
        
            
	decrypt.setText(encryText);
        }
    }//GEN-LAST:event_AtbashBtnMouseClicked

    private void AtbashBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AtbashBtnMouseEntered
        // TODO add your handling code here:
        setColor(AtbashBtn);
        setColorTF(TF6);
        setBorder2(AtbashBtn);
    }//GEN-LAST:event_AtbashBtnMouseEntered

    private void AtbashBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AtbashBtnMouseExited
        // TODO add your handling code here:
        resetColor(AtbashBtn);
        resetColorTF(TF6);
    }//GEN-LAST:event_AtbashBtnMouseExited

    private void ROT47btn1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ROT47btn1MouseClicked
        // TODO add your handling code here:
        String z1 = encrypt.getText();
        String z2 = decrypt.getText();
        
        if(!z1.equals("") && z2.equals("")){
        
        int key = 47;
        String encrypText = "";
        for (int i = 0; i < z1.length(); i++) {
            int temp = (int)z1.charAt(i) + key;
            if((int)z1.charAt(i) == 32){
                encrypText += " ";
            } else if(temp > 126){
                temp -= 94;
                encrypText += (char)temp;
            } else {
                encrypText += (char)temp;
            } // if-else
        } // for
        
	decrypt.setText(encrypText);
        
        
        } else if(!z2.equals("")&& z1.equals("")){
       
        int key = 47;
        String decrypText = "";
        for (int i = 0; i < z2.length(); i++) {
            int temp = (int)z2.charAt(i) - key;
            if((int)z2.charAt(i) == 32){
                decrypText += " ";
            } else if(temp < 32){
                temp += 94;
                decrypText += (char)temp;
            } else {
                decrypText += (char)temp;
            } // if-else
        } // for
        
        encrypt.setText(new String(decrypText));
            
        } else if(!z2.equals("")&& !z1.equals("")){
            
            int key = 47;
        String encrypText = "";
        for (int i = 0; i < z1.length(); i++) {
            int temp = (int)z1.charAt(i) + key;
            if((int)z1.charAt(i) == 32){
                encrypText += " ";
            } else if(temp > 126){
                temp -= 94;
                encrypText += (char)temp;
            } else {
                encrypText += (char)temp;
            } // if-else
        } // for
        
	decrypt.setText(encrypText);
        
        }
    }//GEN-LAST:event_ROT47btn1MouseClicked

    private void ROT47btn1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ROT47btn1MouseEntered
        // TODO add your handling code here:
        setColor(ROT47btn1);
        setColorTF(TF7);
        setBorder2(ROT47btn1);
    }//GEN-LAST:event_ROT47btn1MouseEntered

    private void ROT47btn1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ROT47btn1MouseExited
        // TODO add your handling code here:
        resetColor(ROT47btn1);
        resetColorTF(TF7);
    }//GEN-LAST:event_ROT47btn1MouseExited

    private void cboXItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboXItemStateChanged
        // TODO add your handling code here:
        if(cboX.getSelectedItem() == " BASE64") {
            keyfield.setText("1");
            keyfield.setVisible(false);
            
            Base64Btn.setVisible(true);
            caesar.setVisible(false);
            ROT47btn1.setVisible(false);
            Vigenerebtn.setVisible(false);
            hex.setVisible(false);
            XORbtn.setVisible(false);
            AtbashBtn.setVisible(false);
            
            encrypt.setText("");
            decrypt.setText("");
                    
                    
        } else if (cboX.getSelectedItem() == " Caesar") {
            keyfield.setText("1");
            keyfield.setVisible(true);
            
            Base64Btn.setVisible(false);
            caesar.setVisible(true);
            ROT47btn1.setVisible(false);
            Vigenerebtn.setVisible(false);
            hex.setVisible(false);
            XORbtn.setVisible(false);
            AtbashBtn.setVisible(false);
            
            encrypt.setText("");
            decrypt.setText("");
                    
        } else if (cboX.getSelectedItem() == " ROT47") {
            keyfield.setText("1");
            keyfield.setVisible(false);
            
            Base64Btn.setVisible(false);
            caesar.setVisible(false);
            ROT47btn1.setVisible(true);
            Vigenerebtn.setVisible(false);
            hex.setVisible(false);
            XORbtn.setVisible(false);
            AtbashBtn.setVisible(false);
            
            encrypt.setText("");
            decrypt.setText("");
                    
        } else if (cboX.getSelectedItem() == " Vigenere") {
            keyfield.setText("1");
            keyfield.setVisible(true);
            
            Base64Btn.setVisible(false);
            caesar.setVisible(false);
            ROT47btn1.setVisible(false);
            Vigenerebtn.setVisible(true);
            hex.setVisible(false);
            XORbtn.setVisible(false);
            AtbashBtn.setVisible(false);
            
            encrypt.setText("");
            decrypt.setText("");
                    
        } else if (cboX.getSelectedItem() == " HEX") {
            keyfield.setText("1");
            keyfield.setVisible(false);
            
            Base64Btn.setVisible(false);
            caesar.setVisible(false);
            ROT47btn1.setVisible(false);
            Vigenerebtn.setVisible(false);
            hex.setVisible(true);
            XORbtn.setVisible(false);
            AtbashBtn.setVisible(false);
            
            encrypt.setText("");
            decrypt.setText("");
                    
        } else if (cboX.getSelectedItem() == " XOR") {
            keyfield.setText("1");
            keyfield.setVisible(true);
            
            Base64Btn.setVisible(false);
            caesar.setVisible(false);
            ROT47btn1.setVisible(false);
            Vigenerebtn.setVisible(false);
            hex.setVisible(false);
            XORbtn.setVisible(true);
            AtbashBtn.setVisible(false);
            
            encrypt.setText("");
            decrypt.setText("");
                    
        } else if (cboX.getSelectedItem() == " Atbash") {
            keyfield.setText("1");
            keyfield.setVisible(false);
                    
            Base64Btn.setVisible(false);
            caesar.setVisible(false);
            ROT47btn1.setVisible(false);
            Vigenerebtn.setVisible(false);
            hex.setVisible(false);
            XORbtn.setVisible(false);
            AtbashBtn.setVisible(true);
            
            encrypt.setText("");
            decrypt.setText("");
        } 
    }//GEN-LAST:event_cboXItemStateChanged

    int xMouse;
    int yMouse;
    private void jLabel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseDragged
        // TODO add your handling code here:
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen() - 20;
        
        this.setLocation(x - xMouse,y - yMouse);
    }//GEN-LAST:event_jLabel1MouseDragged

    private void jLabel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MousePressed
        // TODO add your handling code here:
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_jLabel1MousePressed

        public void y1() {
        resetColor(hex);
        resetColorTF(TF1);
    }
    
           
public void resetColor(JPanel panel)
    {
        panel.setBackground(new java.awt.Color(255, 255, 255));
    }

public void setColor(JPanel panel)
    {
        panel.setBackground(new java.awt.Color(122,71,221));
    }

 public void setBorder2(JPanel panel)
    {
    panel.setBorder(new LineBorder(new java.awt.Color(112, 71, 221)));
    }    
    
    public void resetBorder(JPanel panel)
    {
    panel.setBorder(BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
    }
    
    public void setColorTF(JLabel label)
    {
        label.setForeground(new java.awt.Color(255,255,225));
    }

public void resetColorTF(JLabel label)
    {
        label.setForeground(new java.awt.Color(210,210,210));
    }
        
        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AtbashBtn;
    private javax.swing.JPanel Base64Btn;
    private javax.swing.JPanel ROT47btn1;
    private javax.swing.JScrollPane TA1;
    private javax.swing.JScrollPane TA2;
    private javax.swing.JLabel TF1;
    private javax.swing.JLabel TF2;
    private javax.swing.JLabel TF3;
    private javax.swing.JLabel TF4;
    private javax.swing.JLabel TF5;
    private javax.swing.JLabel TF6;
    private javax.swing.JLabel TF7;
    private javax.swing.JPanel Vigenerebtn;
    private javax.swing.JPanel XORbtn;
    private javax.swing.JPanel caesar;
    private javax.swing.JComboBox<String> cboX;
    private javax.swing.JTextArea decrypt;
    private javax.swing.JTextArea encrypt;
    private javax.swing.JPanel hex;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField keyfield;
    // End of variables declaration//GEN-END:variables

}